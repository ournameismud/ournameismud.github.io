@mixin type-reveal($selector: ".site") {
  #{unquote($selector)} {
    transition: opacity .4s;
    opacity: 0;
    .wf-active &,
    .wf-fail &,
    .wf-inactive & {
      opacity: 1;
    }
  }

  .no-js {
    #{unquote($selector)} {
      opacity: 1;
    }
  }
}

// font-size  -
// see http://codepen.io/chriscoyier/pen/gsodI for usage example
// - does not require a height, although a height can be used

@mixin font-size($font-size, $line-height: true) {
  @if $debug == true {
    font-size: $font-size * 1px;
  } @else {
    font-size: ($font-size / $base-font-size) * 1rem;
  }

  @if $line-height == true {
    line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
  }


  @elseif $line-height != false {
    @if type-of($line-height) == number {
      @if unitless($line-height) {
        line-height: computeLineHeight($font-size, $line-height);
      }
    }
  }
}

@mixin line-height($font-size, $line-height: true) {
  @if $line-height == true {
    line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
  }
  @if unitless($line-height) {
    line-height: computeLineHeight($font-size, $line-height);
  }
}

@mixin font-baseline($font-size: $base-font-size, $line-height:  $base-line-height, $default:$browser-default-font-size) {
  font-size: $base-font-size / $browser-default-font-size + em;
  line-height: $base-line-height / $base-font-size; /* [2] */
}


@mixin baseline($baseline: $magic-number) {
  html {
    $size: strip-units($baseline);
    background-image: url(http://basehold.it/i/#{$size});
  }
}
